{
  "name": "BPIC17",
  "version": "1.0.0",
  "records": [
    {
      "record_labels": "EventRecord",
      "prevalent_record": "(record:Record)",
      "required_attributes": [
        "timestamp",
        "activity",
        "lifecycle",
        "eventOrigin",
        "action"
      ]
    },
    {
      "record_labels": "ApplicationRecord",
      "prevalent_record": "(record:Record)",
      "required_attributes": [
        "case"
      ]
    },
    {
      "record_labels": "ApplicationDetailRecord",
      "prevalent_record": "(record:Record {eventOrigin: 'Application'})",
      "required_attributes": [
        "case",
        "applicationType",
        "requestedAmount"
      ],
      "optional_attributes": [
        "loanGoal"
      ]
    },
    {
      "record_labels": "WorkflowRecord",
      "prevalent_record": "(record:Record)",
      "required_attributes": [
        "case"
      ]
    },
    {
      "record_labels": "WorkflowCorrRecord",
      "prevalent_record": "(record:Record {eventOrigin: 'Workflow'})",
      "required_attributes": [
        "case"
      ]
    },
    {
      "record_labels": "OfferRecord:OfferEventIdRecord",
      "prevalent_record": "(record:Record WHERE record.eventOrigin = 'Offer' AND record.eventId STARTS WITH 'Offer_')",
      "required_attributes": [
        "eventId",
        "case",
        "creditScore",
        "firstWithdrawalAmount",
        "monthlyCost",
        "numberOfTerms",
        "offeredAmount"
      ]
    },
    {
      "record_labels": "OfferRecord:OfferIdRecord",
      "prevalent_record": "(record:Record WHERE record.eventOrigin = 'Offer' AND record.eventId STARTS WITH 'OfferState_')",
      "required_attributes": [
        "offerId"
      ]
    },
    {
      "record_labels": "ResourceRecord",
      "prevalent_record": "(record:Record)",
      "required_attributes": [
        "resourceId"
      ]
    }
  ],
  "nodes": [
    {
      "type": "Event",
      "constructor": [
        {
          "prevalent_record": "(record:EventRecord)",
          "result": "(e:Event {timestamp:record.timestamp, activity:record.activity, lifecycle:record.lifecycle})"
        }
      ]
    },
    {
      "type": "Activity",
      "constructor": [
        {
          "prevalent_record": "(record:EventRecord)",
          "result": "(a:Activity {activity:record.activity, lifecycle:record.lifecycle})",
          "infer_observed": true
        }
      ]
    },
    {
      "type": "Application",
      "constructor": [
        {
          "prevalent_record": "(record:ApplicationDetailRecord)",
          "result": "(a:Entity:Application {sysId: record.case, loanGoal: record.loanGoal, requestedAmount: record.requestedAmount})",
          "infer_corr_from_event_record": true
        },
        {
          "prevalent_record": "(record:ApplicationRecord)",
          "result": "(a:Entity:Application {sysId: record.case})",
          "infer_corr_from_event_record": false
        }
      ],
      "infer_df": true,
      "include_label_in_df": true,
      "merge_duplicate_df": true
    },
    {
      "type": "Workflow",
      "constructor": [
        {
          "prevalent_record": "(record:WorkflowCorrRecord)",
          "result": "(w:Entity:Workflow {sysId: record.case})",
          "infer_corr_from_event_record": true
        },
        {
          "prevalent_record": "(record:WorkflowRecord)",
          "result": "(w:Entity:Workflow {sysId: record.case})",
          "infer_corr_from_event_record": false
        }
      ],
      "infer_df": true,
      "include_label_in_df": true,
      "merge_duplicate_df": true
    },
    {
      "type": "Offer",
      "constructor": [
        {
          "prevalent_record": "(record:OfferEventIdRecord)",
          "result": "(o:Entity:Offer {sysId: record.eventId, case: record.case, creditScore: record.creditScore, firstWithdrawalAmount: record.firstWithdrawalAmount, monthlyCost: record.monthlyCost, numberOfTerms: record.numberOfTerms, offeredAmount: record.offeredAmount})",
          "infer_corr_from_event_record": true
        },
        {
          "prevalent_record": "(record:OfferIdRecord)",
          "result": "(o:Entity:Offer {sysId: record.offerId})",
          "infer_corr_from_event_record": true
        }
      ],
      "infer_df": true,
      "include_label_in_df": true,
      "merge_duplicate_df": true
    },
    {
      "type": "Resource",
      "constructor": [
        {
          "prevalent_record": "(record:ResourceRecord)",
          "result": "(r:Entity:Resource {sysId: record.resource})",
          "infer_corr_from_event_record": true
        }
      ],
      "infer_df": true,
      "include_label_in_df": true,
      "merge_duplicate_df": true
    },
    {
      "type": "CaseAWO",
      "constructor": [
        {
          "prevalent_record": "(record:EventRecord)",
          "result": "(case_awo:Entity:CaseAWO {sysId: record.case)}",
          "infer_corr_from_event_record": false
        }
      ],
      "infer_df": false
    },
    {
      "type": "CaseAO",
      "constructor": [
        {
          "relation": "(o:Offer) - [:CASE_AO] -> (a:Application)",
          "result": "(case_ao:Entity:CaseAO {offerId: o.sysId, applicationId: a.sysId})",
          "infer_reified_relation": true,
          "infer_corr_from_reified_parents": true
        }
      ],
      "infer_df": false
    },
    {
      "type": "CaseAW",
      "constructor": [
        {
          "relation": "(w:Workflow) - [:CASE_AW] -> (a:Application)",
          "result": "(case_aw:Entity:CaseAW {workflowId: w.sysId, applicationId: a.sysId})",
          "infer_reified_relation": true,
          "infer_corr_from_reified_parents": true
        }
      ],
      "infer_df": false
    },
    {
      "type": "CaseWO",
      "constructor": {
        "relation": "(o:Offer) - [:CASE_WO] -> (w:Workflow)",
        "result": "(case_wo:Entity:CaseWO {workflowId: w.sysId, offerId: o.sysId})",
        "infer_reified_relation": true,
        "infer_corr_from_reified_parents": true
      },
      "infer_df": false
    }
  ],
  "relations": [
    {
      "type": "CASE_AO",
      "constructed_by_nodes": {
        "prevalent_record": "(:EventRecord {case: a.sysId, offerId: o.sysId})",
        "from_node": "(o: Offer)",
        "to_node": "(a: Application)"
      },
      "result": "(o) - [:CASE_AO] -> (a)"
    },
    {
      "type": "CASE_AO",
      "constructed_by_nodes": {
        "prevalent_record": "(:EventRecord {case: a.sysId, eventId: o.sysId})",
        "from_node": "(o: Offer)",
        "to_node": "(a: Application)"
      },
      "result": "(o) - [:CASE_AO] -> (a)"
    },
    {
      "type": "CASE_AW",
      "constructed_by_nodes": {
        "prevalent_record": "(:EventRecord {case: w.sysId})",
        "from_node": "(w: Workflow)",
        "to_node": "(a: Application {sysId: w.sysId})"
      },
      "result": "(w) - [:CASE_AW] -> (a)"
    },
    {
      "type": "CASE_WO",
      "constructed_by_nodes": {
        "prevalent_record": "(:EventRecord {case: w.sysId, offerId: o.sysId})",
        "from_node": "(o: Offer)",
        "to_node": "(w: Workflow)"
      },
      "result": "(o) - [:CASE_WO] -> (w)"
    },
    {
      "type": "CASE_WO",
      "constructed_by_nodes": {
        "prevalent_record": "(:EventRecord {case: w.sysId, eventId: o.sysId})",
        "from_node": "(o: Offer)",
        "to_node": "(w: Workflow)"
      },
      "result": "(o) - [:CASE_WO] -> (w)"
    }
  ]
}
